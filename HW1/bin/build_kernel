#!/usr/bin/env python

import subprocess
import os

#Install libraries needed to build the kernel
subprocess.call("sudo apt-get install git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc",shell=True,stdout=None)

#Get the kernel file
subprocess.call("wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.12.11.tar.xz",shell=True,stdout=None)

#untar the file
subprocess.call("tar xvf linux-4.12.10.tar.xz",shell=True,stdout=None)

#change the directory to the extracted folder
os.chdir(os.path.dirname("linux-4.12.10/"))

#save the old config file
subprocess.call("cp /boot/config-$(uname -r) .config",shell=True,stdout=None)

#make using the old config file
subprocess.call("make oldconfig",shell=True,stdout=None)

#make to compile kernel and its modules,make modules_install to install kernel modules and make install to copy kernel and .config file to the /boot folder and to generate system.map file
subprocess.call("sudo make -j 4 && sudo make modules_install -j 4 && sudo make install -j 4",shell=True,stdout=None)

#To use new kernel next time we boot up
subprocess.call("sudo update-initramfs -c -k 4.12.10",shell=True,stdout=None)

#look for kernel in the /boot folder and add them to the grub's config file
subprocess.call("sudo update-grub",shell=True,stdout=None)

